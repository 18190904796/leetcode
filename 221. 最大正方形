在一个由 0 和 1 组成的二维矩阵内，找到只包含 1 的最大正方形，并返回其面积。

示例:

输入: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

输出: 4

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximal-square
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int res=0;
        for(int i=0;i<matrix.size();i++){
            vector<int> v(matrix[i].size(),0);
            for(int j=i;j<matrix.size();j++){
                for(int k=0;k<matrix[j].size();k++){
                    if(matrix[j][k]=='1') v[k]++;
                }
                res=max(res,getSquareArea(v,j-i+1));
            }
        }
        return res;
    }
    int getSquareArea(vector<int>&v,int k){
        if(v.size()<k) return 0;
        int cnt=0;
        for(int i=0;i<v.size();i++){
            if(v[i]!=k) cnt=0;
            else cnt++;
            if(cnt==k) return k*k;
        }
        return 0;
    }
};
