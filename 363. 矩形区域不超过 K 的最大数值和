给定一个非空二维矩阵 matrix 和一个整数 k，找到这个矩阵内部不大于 k 的最大矩形和。

示例:

输入: matrix = [[1,0,1],[0,-2,3]], k = 2
输出: 2 
解释: 矩形区域 [[0, 1], [-2, 3]] 的数值和是 2，且 2 是不超过 k 的最大数字（k = 2）。

说明：

    矩阵内的矩形区域面积必须大于 0。
    如果行数远大于列数，你将如何解答呢？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//暴力求解法
class Solution {
public:
    int maxSumSubmatrix(vector<vector<int>>& matrix, int k) {
        if(matrix.empty()||matrix[0].empty()) return 0;
        int m=matrix.size(),n=matrix[0].size(),ans=INT_MIN;
        int sum[m][n];
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
            {
                int t=matrix[i][j];
                if(i>0) t+=sum[i-1][j];
                if(j>0)t+=sum[i][j-1];
                if(i>0&&j>0) t-=sum[i-1][j-1];
                sum[i][j]=t;
                for(int r=0;r<=i;r++)
                    for(int c=0;c<=j;c++)
                    {
                        int d=sum[i][j];
                        if(r>0) d-=sum[r-1][j];
                        if(c>0) d-=sum[i][c-1];
                        if(r>0&&c>0) d+=sum[r-1][c-1];
                        if(d<=k) ans=max(ans,d);
                    }

            }
            return ans;
    }
};
